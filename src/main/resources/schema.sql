--- Таблица рейтингов фильмов
CREATE TABLE IF NOT EXISTS mpa (
    mpa_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    mpa_name VARCHAR(255) NOT NULL UNIQUE,
    CONSTRAINT mpa_pk primary key (mpa_id)
);

--- Таблица жанров фильмов
CREATE TABLE IF NOT EXISTS genres (
   genre_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
   genre_name VARCHAR(255) NOT NULL UNIQUE,
   CONSTRAINT genres_pk primary key (genre_id)
);

--- Таблица с пользователями
CREATE TABLE IF NOT EXISTS users (
    user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name VARCHAR(255) NOT NULL UNIQUE,
    user_email VARCHAR(255) NOT NULL UNIQUE,
    user_login VARCHAR(255) NOT NULL UNIQUE,
    user_birthday DATE
);

--- Таблица с фильмами
CREATE TABLE IF NOT EXISTS films (
    film_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    film_name VARCHAR(255) NOT NULL UNIQUE,
    film_description VARCHAR(255) NOT NULL,
    film_release_date DATE,
    film_duration LONG,
    mpa_id INT REFERENCES mpa (mpa_id)
);

--- Таблица с любимыми фильмами
CREATE TABLE IF NOT EXISTS films_favorite (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    film_id INTEGER REFERENCES films (film_id) ON DELETE CASCADE,
    CONSTRAINT favorite_uk UNIQUE (user_id,film_id)
);

--- Таблица с друзями
CREATE TABLE IF NOT EXISTS users_friends (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    friend_status_confirmation BOOLEAN DEFAULT false,
    CONSTRAINT friends_uk UNIQUE (user_id,friend_id)
);

--- Таблица с любимыми фильмами
CREATE TABLE IF NOT EXISTS films_genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INTEGER REFERENCES films (film_id),
    genre_id INTEGER REFERENCES genres (genre_id),
    CONSTRAINT genres_uk UNIQUE (genre_id,film_id)
);